digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	8 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__enable_if<std::__is_integer<int>::__value, double>::__type std::sqrt<int>(int)\n100.00%\n(100.00%)\n1030×"];
	9 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::operator[](unsigned long)\n100.00%\n(100.00%)\n799×"];
	10 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::size() const\n100.00%\n(100.00%)\n405×"];
	11 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::operator[](unsigned long) const\n100.00%\n(100.00%)\n200×"];
	12 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="isOdd(int)\n100.00%\n(100.00%)\n100×"];
	13 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="isPrime(int)\n100.00%\n(100.00%)\n100×"];
	13 -> 8 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1030×", labeldistance="4.00", penwidth="4.00"];
	14 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="factorial(int)\n100.00%\n(100.00%)\n100×"];
	15 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::~new_allocator()\n100.00%\n(100.00%)\n6×"];
	16 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator<int>::~allocator()\n100.00%\n(100.00%)\n6×"];
	16 -> 15 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n6×", labeldistance="4.00", penwidth="4.00"];
	17 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)\n100.00%\n(100.00%)\n4×"];
	18 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::_M_max_size() const\n100.00%\n(100.00%)\n4×"];
	19 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator<int>::allocator(std::allocator<int> const&)\n100.00%\n(100.00%)\n4×"];
	19 -> 17 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n4×", labeldistance="4.00", penwidth="4.00"];
	20 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()\n100.00%\n(100.00%)\n4×"];
	21 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)\n100.00%\n(100.00%)\n2×"];
	22 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)\n100.00%\n(100.00%)\n2×"];
	22 -> 18 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	23 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::new_allocator()\n100.00%\n(100.00%)\n2×"];
	24 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::new_allocator<int>::max_size() const\n100.00%\n(100.00%)\n2×"];
	24 -> 18 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	25 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator<int>::allocator()\n100.00%\n(100.00%)\n2×"];
	25 -> 23 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	26 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)\n100.00%\n(100.00%)\n2×"];
	27 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)\n100.00%\n(100.00%)\n2×"];
	27 -> 36 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	28 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)\n100.00%\n(100.00%)\n2×"];
	28 -> 19 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	28 -> 32 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	29 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()\n100.00%\n(100.00%)\n2×"];
	29 -> 16 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	30 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)\n100.00%\n(100.00%)\n2×"];
	30 -> 35 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	31 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)\n100.00%\n(100.00%)\n2×"];
	31 -> 27 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	32 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()\n100.00%\n(100.00%)\n2×"];
	33 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)\n100.00%\n(100.00%)\n2×"];
	33 -> 28 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	33 -> 31 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	34 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::_Vector_base<int, std::allocator<int> >::~_Vector_base()\n100.00%\n(100.00%)\n2×"];
	34 -> 29 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	34 -> 30 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	35 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)\n100.00%\n(100.00%)\n2×"];
	35 -> 21 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	36 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)\n100.00%\n(100.00%)\n2×"];
	36 -> 22 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	37 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::allocator_traits<std::allocator<int> >::max_size(std::allocator<int> const&)\n100.00%\n(100.00%)\n2×"];
	37 -> 24 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	38 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long)\n100.00%\n(100.00%)\n2×"];
	38 -> 44 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	38 -> 46 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	38 -> 52 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	39 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)\n100.00%\n(100.00%)\n2×"];
	39 -> 37 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	39 -> 51 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	40 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long, std::allocator<int> const&)\n100.00%\n(100.00%)\n2×"];
	40 -> 16 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	40 -> 19 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	40 -> 39 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	41 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long)\n100.00%\n(100.00%)\n2×"];
	41 -> 20 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	41 -> 50 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	42 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&)\n100.00%\n(100.00%)\n2×"];
	42 -> 33 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	42 -> 40 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	42 -> 41 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	43 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::vector<int, std::allocator<int> >::~vector()\n100.00%\n(100.00%)\n2×"];
	43 -> 20 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	43 -> 34 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	43 -> 54 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	44 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void std::_Construct<int>(int*)\n100.00%\n(100.00%)\n2×"];
	44 -> 57 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	45 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="int* std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&, std::random_access_iterator_tag)\n100.00%\n(100.00%)\n2×"];
	45 -> 55 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	46 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="int* std::__addressof<int>(int&)\n100.00%\n(100.00%)\n2×"];
	47 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::__size_to_integer(unsigned long)\n100.00%\n(100.00%)\n2×"];
	48 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&)\n100.00%\n(100.00%)\n2×"];
	49 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long)\n100.00%\n(100.00%)\n2×"];
	49 -> 38 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	50 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&)\n100.00%\n(100.00%)\n2×"];
	50 -> 49 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	51 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)\n100.00%\n(100.00%)\n2×"];
	52 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)\n100.00%\n(100.00%)\n2×"];
	52 -> 45 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	52 -> 47 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	52 -> 48 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	53 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void std::_Destroy<int*>(int*, int*)\n100.00%\n(100.00%)\n2×"];
	53 -> 26 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	54 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)\n100.00%\n(100.00%)\n2×"];
	54 -> 53 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	55 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="void std::__fill_a<int*, int>(int*, int*, int const&)\n100.00%\n(100.00%)\n2×"];
	55 -> 56 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n2×", labeldistance="4.00", penwidth="4.00"];
	56 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)\n100.00%\n(100.00%)\n2×"];
	57 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="operator new(unsigned long, void*)\n100.00%\n(100.00%)\n2×"];
	58 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="computeAverage(std::vector<int, std::allocator<int> > const&)\n100.00%\n(100.00%)\n1×"];
	58 -> 10 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n102×", labeldistance="4.00", penwidth="4.00"];
	58 -> 11 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n100×", labeldistance="4.00", penwidth="4.00"];
	59 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="computePrefixSum(std::vector<int, std::allocator<int> > const&)\n100.00%\n(100.00%)\n1×"];
	59 -> 9 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n199×", labeldistance="4.00", penwidth="4.00"];
	59 -> 10 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n101×", labeldistance="4.00", penwidth="4.00"];
	59 -> 11 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n100×", labeldistance="4.00", penwidth="4.00"];
	59 -> 16 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	59 -> 25 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	59 -> 42 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	60 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="generateRandomNumbers(int, int, int)\n100.00%\n(100.00%)\n1×"];
	60 -> 9 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n100×", labeldistance="4.00", penwidth="4.00"];
	60 -> 16 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	60 -> 25 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	60 -> 42 [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	61 [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="__static_initialization_and_destruction_0(int, int)\n100.00%\n(100.00%)\n1×"];
}
